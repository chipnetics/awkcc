.\" Skeleton file for requirement specification documents.
.\" Includes section for coversheet and main body.
.\" Use 'coverdoc -O _coversheet_ _this_file_' to extract the coversheet.
.\" Define the name of the feature and subfeature this document is for.
.\" The feature name is often something line "RFS",
.\" while the subfeature might be something line "MNS" (which is part of RFS).
.\" The 1st 3 digits of a requirement number often refer to specific commands.
.\" The feature and subfeature names are sometimes combined (e.g., "DMD").
.ds fe "awkcc
.ds sf "subfeature
.\" The following line is used by ants(1) - the automatic number generator.
.nr w \w'NR:\*(fe-\*(sf-000.000 '
.\"
.tr @
.HC ^
.TL \""" don't use WPN if this won't be an IM "982101-0105" "40135-010"
Requirements Specifications for \fIawkcc 2.0\fP \- Issue \fI1\fP
.AU "R. Datar" RD IH 45262 "(708) 979-6431" 1C-202 att!ihlpz!datar
.AU "M.E. Barrett" MEB IH BL0452620 "(708) 979-5496" 1C-202 att!ihspa!meb2
.\" If we decide to publish them, uncomment next line.
.\" .TM 45262-91mmdd.01IM
.AS 1
******** We don't plan on distributing these documents with IMs so the abstract
******** isn't needed.  It's not printed by default, so don't worry about it.
Coversheet abstract goes here.
It only appears in the coversheet if that's printed.
.AE
.ig
.\" This section contains stuff for the coversheet.
.CS "# pages excluding coversheet" "" "" "" "" ""
.\" '.mC' is the Mercury listings
.mC "cmp" ""
.\" Don't remember what '.fA y' is!
.fA y
.\" '.aC BL' is the company
.aC BL
.cC
The list of people who get complete copies of the document goes here.
.cE
.cS
CoverSheet only list here.
.cE
.\" '.OK' is the keyword list
.OK ""
..
.SA 1
.MT "Internal Memorandum"
.H 1 "INTRODUCTION"
This document contains the requirement specifications for
the awkcc 2.0 feature.
.H 2 "Feature Description"
The awkcc 2.0 feature contains one command \fIawkcc.\fP
The awkcc command converts a program in nawk language to an equivalent program
in C language and then compiles this translated C program
to produce an "a.out" file.
.H 2 "Issue Information"
This is the first issue.
.H 2 "Glossary"
This document does not define or use any special terms or acronyms.
.P
.\" begin definition of mark word
.de mw
.cc _
\\$3\c
_ft B
\(sb\\$1\(sp\c
_ft
\\$2
_cc
..
.\" end definition of mark word
.P
\fRThe use of "\fB\(sb\fR" and "\fB\(sp\fR" symbols surrounding a word denote
that the word is a logical representation for a type of input or output.
One type of use for this convention is 
.mw return
which denotes either a newline within an output string, or a user typing the
return key on a terminal.
Another use is when there is an 
argument that is repeated in an error message, such as "\c
.mw language 
is not a valid language."
.\"Note the use of the \c troff construct to allow .mw to be used without
.\"breaking up the line (or adding a space).  This was necessary because
.\"the quote (") had to be before language, but "is" needed a space in-between.
.P
A sentence in \fBbold\fP font and preceded by
^``R:\*(fe-\*(sf-\fI<#.#>\fP''
specifies a requirement and is usually followed by some text describing the
motivation for the corresponding requirement.
.P
A sentence in \fBbold\fP font and preceded by
^``NR:\*(fe-\*(sf-\fI<#.#>\fP''
specifies an item which is specifically
not a requirement and is usually followed by some text describing the item.
The intent is to document that some candidate requirements were given
consideration and were not chosen to be requirements.
An example might be functionality which has been changed or deleted due
to changes in the standards applicable to a product.
Numbers for these items are not related to requirement numbers.
.H 2 "File Formats"
This feature does not include any data or configuration files.
.H 1 "REQUIREMENTS"
This section lists all the requirements for the awkcc 2.0 feature.
.\"
.H 2 "General Requirements"
.VL \nwu
.LI R:\*(fe\-\-010.010
\fBThe executable file will be called \fIawkcc\fP
and be installed in either
the \fI/opt/awkcc/bin\fP, \fI/opt/rds/bin\fP, or \fI/usr/bin\fP directory,
with mode \fI0555\fP, owner \fIbin\fP, and group \fIbin\fP.\fR
.ig
\fBThe required library file will be called libAWK.a and be installed
in same main directory choosen for the binary program; either the
\fI/opt/awkcc/lib\fP, \fI/opt/rds/lib\fP, or \fI/usr/lib\fP directory,
with mode 0444, owner bin, and group bin.\fR
..
.LI R:\*(fe\-\-010.020
\fBValid nawk programs must be compiled without errors,
and a C program and its (the translated C programs)
compiled version, an \fIa.out\fP file, must also be generated.\fR
.LI R:\*(fe\-\-010.030
\fBThe C program generated by the awkcc command must be compilable
on that system.
The C program so generated must be functionally equivalent to the execution
of the nawk command using the given nawk program for a given input file.\fR
.LI R:\*(fe\-\-010.040
\fBInvalid nawk programs, i.e., nawk programs containing syntax errors,
must not be compiled, and appropriate error messages should be generated.\fR
.LE
.H 2 "Functional Requirements"
.\" Next line used by ants(1) to start a new group of requirements.
.VL \nwu
.LI R:\*(fe\-\-020.010
\fBIf the -b option is used, C code that does not buffer all the output
will be generated.
If the output is to a terminal, the output is not buffered.\fR
.LI R:\*(fe\-\-020.020
\fBIf the -B option is used, C code that buffers the output
will be generated. This is the default option.\fR
.LI R:\*(fe\-\-020.030
\fBIf the -J option is used,
the proper option will be passed on to the assembler
when it is invoked (during the compilation of the translated C program)
so that correct branch instructions for "large" programs will be generated.
(This option may be required for assemblers on some machines;
e.g., VAX machines.)\fR
.LI R:\*(fe\-\-020.040
\fBIf the -o 
.mw outfile
option is used, the compiled version of the
translated C program will be stored in
.mw outfile .\fR
.LI R:\*(fe\-\-020.050
\fBIf the -o
.mw outfile
option is not used, the compiled version of the
translated C program will be stored in \fIa.out\fP file.\fR
.LI R:\*(fe\-\-020.060
\fBIf the -c
.mw cprogfile
option is used, the translated C program will be
stored in
.mw cprogfile .\fR
.LI R:\*(fe\-\-020.070
\fBIf the -c
.mw cprogfile
option is not used, the translated C program will be
stored in \fIawker.c\fP.\fR
.LI R:\*(fe\-\-020.080
\fBIf the -u
.mw var
option is used, the nawk compiler (awkcc) notes the fact
that
.mw var
can be assigned values on the command line
(of the form
.mw var "\c
=
.mw "some\ value"
).
Based on this information, awkcc will generate proper code so that 
the code will work correctly even if an optimizer is used during the
compilation of the translated C program.\fR
.LI R:\*(fe\-\-020.090
\fBLines of the form "#awkcchint\ -
.mw option
.mw argument "
in the nawk program will have the same effect
as the option -u on the command line.\fR
.LI R:\*(fe\-\-020.100
\fBInvalid options will cause an error message to be output and terminate
the execution of the awkcc command.\fR
.LI R:\*(fe\-\-020.110
\fBIf the awkcc command is invoked without an argument to the "\-o", "\-c", or
"\-u" options, an error message will be generated and the command
will be terminated.\fR
.LI R:\*(fe\-\-020.120
\fBAll the options, except the "-f" option, will be accepted
by the
.mw outfile
(produced by the awkcc command).\fR
.LI R:\*(fe\-\-020.130
\fBIf the
.mw outfile
is invoked with invalid argument, an error message will be generated and the
.mw outfile
command will be terminated.\fR
.LI R:\*(fe\-\-020.140
\fBIf the
.mw outfile
is invoked with a parameter but the same parameter
was not specified, using "\-u"option, when the awkcc command was executed, the
.mw outfile
command will output an error message and terminate.\fR
.LE
.H 2 "Documentation Requirements"
.\" Next line used by ants(1) to start a new group of requirements.
.VL \nwu
.LI R:\*(fe\-\-030.010
\fBThe awkcc manual page will be included with the awkcc feature. The
installer will decide if the manual page is to installed.  If the manual
page is installed, It will be installed as \fI/opt/awkcc/man/man1/awkcc.1\fP,
\fI/opt/rds/man/man1/awkcc.1\fP, or \fI/usr/share/man/man1/awkcc.1\fP with
mode \fI0444\fP, owner \fIbin\fP, and group \fIbin\fR.
.LI R:\*(fe\-\-030.020
\fBOn systems with a \fI/usr/catman\fP directory, (i.e., GIS machines),
the packed, formatted man page should be provided such that it can be
displayed with the \fI/usr/bin/man\fP command.
.LE
.H 2 "Compatibility Requirements"
.\" Next line used by ants(1) to start a new group of requirements.
The awkcc command has no compatibility requirements.
.H 2 "Performance Requirements"
.\" Next line used by ants(1) to start a new group of requirements.
This feature has no performance requirements.
.H 1 "REQUIREMENTS CONSIDERED BUT REJECTED"
.VL \nwu
.LI NR:\*(fe\-\-010.010
\fBThe C program produced by the awkcc command need not be ANSI\ C compliant.\fR
.LI NR:\*(fe\-\-010.020
\fBThe -V option to the awkcc command is not supported.\fR
.H 1 "DEPENDENCIES"
The \fIawkcc\fR feature has no dependencies.
.H 1 "ACKNOWLEDGEMENTS"
Thanks to Mark Lindgren for reviewing preliminary drafts of this document.
Thanks to Mike Sheehan for explaining me the manual page.
.SG
.NS 3
draft awkcc(1) manual page
.NE
.ig
.pn 1
.PH "''Attachment I''"
.bp
.PF "''- \\\\nP -''"
..
